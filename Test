-- GuizinLibrary.lua
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local GuizinLibrary = {}
GuizinLibrary.__index = GuizinLibrary

-- Função para criar a UI principal
function GuizinLibrary.new(title)
    local self = setmetatable({}, GuizinLibrary)
    
    -- ScreenGui principal
    self.gui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
    self.gui.Name = "GuizinLibrary"
    
    -- Painel principal
    self.mainFrame = Instance.new("Frame", self.gui)
    self.mainFrame.Size = UDim2.new(0, 300, 0, 400)
    self.mainFrame.Position = UDim2.new(0, 100, 0, 50)
    self.mainFrame.BackgroundColor3 = Color3.fromRGB(50,50,50)
    Instance.new("UICorner", self.mainFrame)
    
    -- Título
    self.titleLabel = Instance.new("TextLabel", self.mainFrame)
    self.titleLabel.Size = UDim2.new(1, -10, 0, 30)
    self.titleLabel.Position = UDim2.new(0, 5, 0, 5)
    self.titleLabel.Text = title or "GuizinLibrary"
    self.titleLabel.TextColor3 = Color3.fromRGB(255,255,255)
    self.titleLabel.BackgroundTransparency = 0.5
    self.titleLabel.TextScaled = true
    self.titleLabel.Font = Enum.Font.SourceSansBold
    Instance.new("UICorner", self.titleLabel)
    
    -- Frame para abas
    self.tabFrame = Instance.new("Frame", self.mainFrame)
    self.tabFrame.Size = UDim2.new(1, -10, 1, -40)
    self.tabFrame.Position = UDim2.new(0, 5, 0, 35)
    self.tabFrame.BackgroundTransparency = 1
    
    self.tabs = {}
    self.activeTab = nil
    
    return self
end

-- Função para criar uma aba
function GuizinLibrary:createTab(tabName)
    local tab = {}
    
    tab.container = Instance.new("ScrollingFrame", self.tabFrame)
    tab.container.Size = UDim2.new(1, 0, 1, 0)
    tab.container.BackgroundTransparency = 1
    tab.container.ScrollBarThickness = 4
    
    tab.elements = {}
    
    -- Mostrar apenas quando ativo
    tab.container.Visible = false
    
    -- Registrar aba
    self.tabs[tabName] = tab
    
    -- Funções de adição de elementos
    function tab:addLabel(text)
        local label = Instance.new("TextLabel", self.container)
        label.Text = text
        label.Size = UDim2.new(1, -10, 0, 25)
        label.Position = UDim2.new(0, 5, 0, (#self.elements)*30)
        label.TextColor3 = Color3.fromRGB(255,255,255)
        label.BackgroundTransparency = 1
        label.TextScaled = true
        table.insert(self.elements, label)
    end
    
    function tab:addButton(text, callback)
        local btn = Instance.new("TextButton", self.container)
        btn.Text = text
        btn.Size = UDim2.new(1, -10, 0, 25)
        btn.Position = UDim2.new(0, 5, 0, (#self.elements)*30)
        btn.BackgroundColor3 = Color3.fromRGB(100,100,100)
        btn.TextColor3 = Color3.fromRGB(255,255,255)
        btn.TextScaled = true
        Instance.new("UICorner", btn)
        
        btn.MouseButton1Click:Connect(callback)
        table.insert(self.elements, btn)
    end
    
    function tab:addToggle(text, default, callback)
        local toggleBtn = Instance.new("TextButton", self.container)
        toggleBtn.Text = text
        toggleBtn.Size = UDim2.new(1, -10, 0, 25)
        toggleBtn.Position = UDim2.new(0, 5, 0, (#self.elements)*30)
        toggleBtn.BackgroundColor3 = Color3.fromRGB(100,100,100)
        toggleBtn.TextColor3 = Color3.fromRGB(255,255,255)
        toggleBtn.TextScaled = true
        Instance.new("UICorner", toggleBtn)
        
        local state = default or false
        local toggleFrame = Instance.new("Frame", toggleBtn)
        toggleFrame.Size = UDim2.new(0, 20, 0, 20)
        toggleFrame.Position = UDim2.new(1, -25, 0, 2)
        toggleFrame.BackgroundColor3 = state and Color3.fromRGB(0,255,0) or Color3.fromRGB(255,255,255)
        Instance.new("UICorner", toggleFrame)
        
        toggleBtn.MouseButton1Click:Connect(function()
            state = not state
            toggleFrame.BackgroundColor3 = state and Color3.fromRGB(0,255,0) or Color3.fromRGB(255,255,255)
            if callback then
                callback(state)
            end
        end)
        
        table.insert(self.elements, toggleBtn)
    end
    
    -- Função para mostrar a aba
    function tab:show()
        if self.container then
            for _, t in pairs(self.tabs) do
                t.container.Visible = false
            end
            self.container.Visible = true
        end
    end
    
    return tab
end

-- Função para mudar título
function GuizinLibrary:setTitle(newTitle)
    self.titleLabel.Text = newTitle
end

return GuizinLibrary
