-- Script criado por RealMidia0800

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local slidRemote = ReplicatedStorage:WaitForChild("SlidRemote")

-- Configurações
local animationId = "rbxassetid://28442712"
local duracaoAnimacao = 1.2
local slideDistance = 20
local slideDuration = 1

local function criarAnimacaoEslide(humanoid)
    if not humanoid or not humanoid.Parent then return end

    local character = humanoid.Parent
    local torso = character:FindFirstChild("Torso")
    local rootPart = character:FindFirstChild("HumanoidRootPart")
    if not torso or not rootPart then return end

    local leftHip = torso:FindFirstChild("Left Hip")
    local rightHip = torso:FindFirstChild("Right Hip")
    local leftShoulder = torso:FindFirstChild("Left Shoulder")
    local rightShoulder = torso:FindFirstChild("Right Shoulder")
    local neck = torso:FindFirstChild("Neck")
    local rootJoint = rootPart:FindFirstChild("RootJoint")

    if not (leftHip and rightHip and leftShoulder and rightShoulder and neck and rootJoint) then return end

    local originalC0 = {
        leftHip = leftHip.C0,
        rightHip = rightHip.C0,
        leftShoulder = leftShoulder.C0,
        rightShoulder = rightShoulder.C0,
        neck = neck.C0,
        rootJoint = rootJoint.C0
    }

    local pose = {
        rootJoint = originalC0.rootJoint * CFrame.new(0, 0, -2) * CFrame.Angles(math.rad(-70), 0, 0),
        leftHip = originalC0.leftHip * CFrame.new(-0.4, 0, 0),
        rightHip = originalC0.rightHip * CFrame.new(1, 0, 0) * CFrame.Angles(0, 0, -0.5),
        leftShoulder = originalC0.leftShoulder * CFrame.Angles(0, 0, math.rad(100)),
        rightShoulder = originalC0.rightShoulder * CFrame.Angles(0, math.rad(40), math.rad(50)),
        neck = originalC0.neck * CFrame.Angles(math.rad(45), 0, 0)
    }

    local tweenInfo = TweenInfo.new(duracaoAnimacao * 0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tweens = {
        TweenService:Create(rootJoint, tweenInfo, {C0 = pose.rootJoint}),
        TweenService:Create(leftHip, tweenInfo, {C0 = pose.leftHip}),
        TweenService:Create(rightHip, tweenInfo, {C0 = pose.rightHip}),
        TweenService:Create(leftShoulder, tweenInfo, {C0 = pose.leftShoulder}),
        TweenService:Create(rightShoulder, tweenInfo, {C0 = pose.rightShoulder}),
        TweenService:Create(neck, tweenInfo, {C0 = pose.neck})
    }

    local animation = Instance.new("Animation")
    animation.AnimationId = animationId

    local animTrack = humanoid:LoadAnimation(animation)
    animTrack:Play()

    for _, tween in ipairs(tweens) do
        tween:Play()
    end

    local slideGoal = rootPart.Position + rootPart.CFrame.LookVector * slideDistance
    local goalCFrame = CFrame.new(slideGoal, slideGoal + rootPart.CFrame.LookVector)

    local slideTween = TweenService:Create(rootPart, TweenInfo.new(slideDuration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        CFrame = goalCFrame
    })
    slideTween:Play()

    task.wait(duracaoAnimacao * 0.6)

    local tweenInfoVolta = TweenInfo.new(duracaoAnimacao * 0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tweensVolta = {
        TweenService:Create(rootJoint, tweenInfoVolta, {C0 = originalC0.rootJoint}),
        TweenService:Create(leftHip, tweenInfoVolta, {C0 = originalC0.leftHip}),
        TweenService:Create(rightHip, tweenInfoVolta, {C0 = originalC0.rightHip}),
        TweenService:Create(leftShoulder, tweenInfoVolta, {C0 = originalC0.leftShoulder}),
        TweenService:Create(rightShoulder, tweenInfoVolta, {C0 = originalC0.rightShoulder}),
        TweenService:Create(neck, tweenInfoVolta, {C0 = originalC0.neck})
    }

    for _, tween in ipairs(tweensVolta) do
        tween:Play()
    end

    task.wait(duracaoAnimacao * 0.2)

    animTrack:Stop()
    animTrack:Destroy()
end

slidRemote.OnServerEvent:Connect(function(player)
    local character = player.Character
    if not character then return end

    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end

    criarAnimacaoEslide(humanoid)
end)
